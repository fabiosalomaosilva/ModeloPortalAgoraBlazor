@page "/passo03"

@using System.Text.Json.Serialization
@using ModeloPortalAgoraBlazor.Services.Interfaces
@inject NavigationManager NavigationManager
@inject HttpClient Http
@inject ClienteState ClienteState
@inject IChangeService ChangeService
@inject IJSRuntime JsRuntime

<PageTitle>Passo 02</PageTitle>

<HeadPasso02/>
<section class="my-6">
    <TitleSeparator Label="Informações bancárias"/>
    @if (ClienteState.FormConta)
    {
        <FormContaBancaria/>
    }
    else
    {
        <div class="flex flex-row my-3">
            <ButtonInput Type="@TypeButton.button" Color="ColorButton.secondary" Size="SizeButton.small" OnClick="(() => ClienteState.FormConta = true)">Adiconar conta</ButtonInput>
        </div>
        <div class="mb-2">
            <TableContasBancarias/>
        </div>
    }
</section>

<section class="my-6">
    <EditForm Model="@Passo02" OnValidSubmit="Submit" class="my-6">
        <TitleSeparator Label="Situação patrimonial"/>
        <div class="grid grid-cols-1 md:grid-cols-4 gap-1 md:gap-4 m-0 md:mt-6">
            <DataAnnotationsValidator/>
            <TextInput @bind-Value="@Passo02.AplicacaoFinanceira" TypeMask="TypeMask.money" MinNumberValue="0" MaxNumberValue="999999999999" />
            <TextInput @bind-Value="@Passo02.EmprestimosFinanciamentos" TypeMask="TypeMask.money" MinNumberValue="0" MaxNumberValue="999999999999"/>
            <TextInput @bind-Value="@Passo02.PatrimonioLiquido" TypeMask="TypeMask.money" MinNumberValue="0" MaxNumberValue="999999999999"/>
            <TextInput @bind-Value="@Passo02.Faturamento" TypeMask="TypeMask.money" MinNumberValue="0" MaxNumberValue="999999999999"/>
            <SelectInput @bind-Value="@Passo02.TipoEnderecoCorrespondencia">
                <option value="">Selecione um banco</option>
                <option value="Comercial">Comercial</option>
                <option value="Outro">Outro</option>
            </SelectInput>
            <TextInput @bind-Value="@Passo02.EspecificacaoEnderecoCorrespondencia"/>

        </div>
        <div class="flex flex-row justify-between">
            <ButtonInput Type="@TypeButton.button" OnClick="Voltar" Color="ColorButton.secondary" Size="SizeButton.normal">Voltar</ButtonInput>
            <ButtonInput Type="@TypeButton.submit" Color="ColorButton.secondary" Size="SizeButton.normal">Avançar</ButtonInput>
        </div>
    </EditForm>
</section>


@code {
    private Passo02Dto Passo02 = new Passo02Dto();

    protected override void OnInitialized()
    {
        ChangeService.OnChange += OnChange;
    }

    private void OnChange()
    {
        StateHasChanged();
    }

    private async void Submit()
    {
        if (ClienteState.Cliente.ContasBancarias.Count == 0)
        {
            var alert = new AlertModal(JsRuntime);
            await alert.ShowToastAsync("Não há contas bancárias cadastradas.", AlertIcon.Error);
            return;
        }
        if (Passo02.TipoEnderecoCorrespondencia == "Outro" && string.IsNullOrEmpty(Passo02.EspecificacaoEnderecoCorrespondencia))
        {
            var alert = new AlertModal(JsRuntime);
            await alert.ShowToastAsync("Especificação do endereço não informada", AlertIcon.Error);
            return;
        }

        ClienteState.Cliente.AplicacaoFinanceira = Convert.ToDecimal(Passo02.AplicacaoFinanceira);
        ClienteState.Cliente.EmprestimosFinanciamentos = Convert.ToDecimal(Passo02.EmprestimosFinanciamentos);
        ClienteState.Cliente.PatrimonioLiquido = Convert.ToDecimal(Passo02.PatrimonioLiquido);
        ClienteState.Cliente.Faturamento = Convert.ToDecimal(Passo02.Faturamento);
        ClienteState.Cliente.TipoEnderecoCorrespondencia = Passo02.TipoEnderecoCorrespondencia;
        ClienteState.Cliente.EspecificacaoEnderecoCorrespondencia = Passo02.EspecificacaoEnderecoCorrespondencia;
    }

    private async void Voltar()
    {        
        var alert = new AlertModal(JsRuntime);
        var response  = await alert.ShowConfirmAsync("Deseja sair da tela?", "Se sair sem salvar, os dados serão perdidos.", AlertIcon.Warning, "Sair");
        if (!response) return;
        NavigationManager.NavigateTo("/Passo02");
    }
}